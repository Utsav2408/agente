handle_user_query_task:
  description: |
   **INPUTS**:
   Student query: {user_input}
   Available Subjects: {available_subjects}
   Conversation history: {conversation_history}
   Last reason: {last_reason}
   Last route: {last_route}

   Using both the available conversation history and the current input, determine the appropriate route for student's query and whether it's a new question or a continuation (`follow_up`).

   **Possible routes**:
   - course: intent to learn or understand or query on or revise a particular course or subject.
   - performance: 
      - intent to check the performance or marks or scores or feedback for a particular exam
      - intent to get guidance on how to improve in exams
   - support: 
      - intent to get some administrative or canvas learning management system query resolve
      - intent to raise a support ticket or check its status or not satisfied with something 
   - out of scope: Route to this, if none of the other routes are relatable.

   **Possible reasons**:
   - follow_up: continuing an existing thread
   - new_query: starting a new topic

   **RULES**:
   1. **Ongoing thread**: If the user input and conversation history indicates that user is answering to a follow-up question asked by bot,
   -> route: `<same as last route>`, reason: `follow_up`

   2. **Course Activity**: 
   - If the user input suggests that they want to learn or explore or has a query on a topic that is part of any of the available subjects.
   -> route: `course`, reason: `new_query`

   - If conversation history indicates that the last route was course and user came back with a follow up question to learn more.
   -> route: `course`, reason: `follow_up`

   3. **Performance Activity**: 
   - If the user input suggests that they want get details on their performance on a recent examination.
   - If the user input suggests that they need guidance on how to improve their academic performance.
   - If the user input needs a summarized feedback of their overall performance.
   -> route: `performance`, reason: `new_query`

   - If the user input has subject or examination details and conversation history indicates that the last route was performance and user came back with a additional details as they didn't mentioned it earlier
   -> route: `performance`, reason: `follow_up`

   4. **Support Activity**: 
   - If the user input suggests that they are not satisfied with a particular answer or feedback given
   - If the user input is to get details or information on the support tickets raised by them
   - If the user input suggests that they want to raise a ticket.
   - If the user input has a support ticket ID and the user input suggests that they want to get its details.
   -> route: `support`, reason: `new_query`

   - The conversation history and user input suggests that the user input is an answer to the follow up question by bot that asks them to elaborate on there problem. 
   -> route: `support`, reason: `follow_up`

   5. **Out of Scope**: Otherwise,
   - If the input suggests greetings or feedbacks from the student, then ensure that you analyze the conversation history and provide a response to the user.
   - If the input is out of scope, then curate a response stating the same and requesting the student to ask questions that are relevant to the routes mentioned above.
   -> route: `out_of_scope`, reason: `new_query`, response: Based any of the above two conditions

  expected_output: |
    Respond **only** with JSON in this exact shape:

    {
      "route": "course" | "performance" | "support" | "out_of_scope",
      "reason": "follow_up" | "new_query",
      "response": If input is out of scope, then this should include your response, otherwise pass an empty string.
    }
  agent: supervisor


# handle_user_query_task:
#   description: |
#    **INPUTS**:
#    Student query: '{user_input}'
#    Conversation history: {conversation_history}
#    Last reason: {last_reason}
#    Last route: {last_route}

#    Using both the available conversation history and the current input, determine the appropriate route for student's query and whether it's a new question or a continuation (`follow_up`).

#    **Possible routes**:
#    - course: intent to learn or understand or query on or revise a particular course or subject.
#    - performance: 
#       - intent to check the performance or marks or scores or feedback for a particular exam
#       - intent to get guidance on how to improve in exams
#    - support: 
#       - intent to get some administrative or canvas learning management system query resolve
#       - intent to raise a support ticket or check its status or not satisfied with something 
#    - out of scope: Route to this, if none of the other routes are relatable.

#    **Possible reasons**:
#    - follow_up: continuing an existing thread
#    - new_query: starting a new topic

#    **RULES**:
#    1. **Ongoing thread**: If the user input and conversation history indicates that user is answering to a follow-up question asked by bot,
#    -> route: `<same as last route>`, reason: `follow_up`

#    2. **Course Activity**: 
#    - If the user input suggests that they want to learn or explore or has a query on a particular topic of their subject or course.
#    - If the user input suggests that they want some clarification on a topic learnt today in class.
#    -> route: `course`, reason: `new_query`

#    - If conversation history indicates that the last route was course and user came back with a follow up question to learn more.
#    -> route: `course`, reason: `follow_up`

#    3. **Performance Activity**: 
#    - If the user input suggests that they want get details on their performance on a recent examination.
#    - If the user input suggests that they need guidance on how to improve their academic performance.
#    - If the user input needs a summarized feedback of their overall performance.
#    -> route: `performance`, reason: `new_query`

#    - If the user input has subject or examination details and conversation history indicates that the last route was performance and user came back with a additional details as they didn't mentioned it earlier
#    -> route: `performance`, reason: `follow_up`

#    4. **Support Activity**: 
#    - If the user input suggests that they are not satisfied with a particular answer or feedback given
#    - If the user input is to get details or information on the support tickets raised by them
#    - If the user input suggests that they want to raise a ticket.
#    - If the user input has a support ticket ID and the user input suggests that they want to get its details.
#    -> route: `support`, reason: `new_query`

#    - The conversation history and user input suggests that the user input is an answer to the follow up question by bot that asks them to elaborate on there problem. 
#    -> route: `support`, reason: `follow_up`

#    5. **Out of Scope**: Otherwise,
#       -> route: `out_of_scope`, reason: `new_query`

#   expected_output: |
#     Respond **only** with JSON in this exact shape:

#     {
#       "route": "course" | "performance" | "support" | "out_of_scope",
#       "reason": "follow_up" | "new_query"
#     }
#   agent: supervisor
